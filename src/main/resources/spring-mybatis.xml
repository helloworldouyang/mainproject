<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com"/>  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    
    <!-- ali支付信息 -->
    <bean id="alipay"  class="com.entity.AliPay">
       <property name="aliPayOrederPaynotify_url" value="${aliPayOrederPaynotify_url}"></property>
    </bean>
  
  <!-- 得到注入的bean帮助类 -->
  <bean class="com.util.framework.ApplicationContextHelper"/>
   
  <!-- 开启aop -->
 <aop:aspectj-autoproxy></aop:aspectj-autoproxy>  
    <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />  
    <bean class="com.aspect.AnnotationAspect" />  
    
    
    
    
    <!-- activemq -->
    <!-- 配置JMS连接工厂 -->
	<bean id="connectionFactory"
		class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	
	
	
	<!-- Queue(点对点) -->
	<!-- 发送消息的目的地（队列） -->
	<bean id="queueDest"
		class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg index="0" value="myQueue" />
	</bean>
	<!-- 配置QueueJms模板  -->
	<bean id="jmsQueueTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="queueDest" />
		<property name="receiveTimeout" value="10000" />
	</bean>
	
	<bean id="producerService" class="com.activemq.queue.spring.impl.ProducerServiceImpl">
		<property name="jmstemplate" ref="jmsQueueTemplate" />
		<property name="destination" ref="queueDest" />
	</bean>

	<bean id="consumerService" class="com.activemq.queue.spring.impl.ConsumerServiceImpl">
		<property name="jmstemplate" ref="jmsQueueTemplate" />
		<property name="destination" ref="queueDest" />
	</bean>
	
	
	
	
	<!-- Topic(发布/订阅) -->
	<!-- 发送消息的目的地（主题） -->
	<bean id="topicDest"
		class="org.apache.activemq.command.ActiveMQTopic">
		<!-- 设置消息队列的名字 -->
		<constructor-arg index="0" value="myTopic" />
	</bean>
	<!-- 配置TopicJms模板  -->
	<bean id="jmsTopicTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="topicDest" />
		<!-- 配置是否为发布订阅者模式，默认为false -->
		<property name="pubSubDomain" value="true"/>
		<property name="receiveTimeout" value="10000" />
	</bean>
	
	
	
	<bean id="publisherService" class="com.activemq.topic.spring.impl.PublisherServiceImpl">
		<property name="jmstemplate" ref="jmsTopicTemplate" />
		<property name="destination" ref="topicDest" />
	</bean>

	<bean id="firstSubscriberService" class="com.activemq.topic.spring.impl.FirstSubscriberServiceImpl">
		<property name="jmstemplate" ref="jmsTopicTemplate" />
		<property name="destination" ref="topicDest" />
	</bean>
	
	<bean id="secondSubscriberService" class="com.activemq.topic.spring.impl.SecondSubscriberServiceImpl">
		<property name="jmstemplate" ref="jmsTopicTemplate" />
		<property name="destination" ref="topicDest" />
	</bean>
	
	
	
	
    
    
</beans>  